@startuml Rebellion

class Agent {
    - double grievance {readOnly}
    - double k {readOnly}
    - double perceivedHardship {readOnly}
    - double riskAversion {readOnly}
    - double threshold {readOnly}
    - boolean active
    - int jailTerm
    + Agent(double governmentLegitimacy, double k, double threshold)
    + boolean getActive()
    + int getJailTerm()
    + void setJailTerm()
}

class Cop {
    - int maxJailTerm {readOnly}
    + Cop(int maxJailTerm)
}

class Location {
    - int xPos
    - int yPos
    + Location(int xPos, int yPos)
    + int getXPos()
    + int getYPos()
}

class Main {
    - double vision {readOnly}
    + Main(double governmentLegimacy, int maxJailTerm, int vision, double copDensity, double agentDensity, int worldSize, double k, double threshold)
    + void start()
    - Set<Tile> visibleTiles(Location location)
    + void main(String[] args) {static}
}

abstract class Person {
    + void takeTurn(Person[] visible)
    + Tile getTile()
    + void setTile(Tile tile)
}

class Tile {
    + Tile(Location location)
    + Set<Person> getPeople()
    + boolean empty()
    + Location getLocation()
    + void addPerson(Person person)
    + void removePerson(Person person)
}


Main --* "*" Tile : - tiles
Agent --|> Person
Cop --|> Person
Tile --* "*" Person : - people
Person --* "1" Tile : # tile
Tile --* "1" Location : - location

@enduml
